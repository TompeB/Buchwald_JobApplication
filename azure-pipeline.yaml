trigger:
- master
- main

pool:
  vmImage: 'Ubuntu-22.04'

variables:
  azureSubscription: 'Azure Resource Group'
  appServicePlanName: ''
  resourceGroup: ''
  azureContainerRegistry: '' 
  webAppName: ''
  imageName: pointofsaleapi
  region: westeurope
  externalServiceUrl: ''
  externalServiceActive: 'false'
  eventHubSettingsName: ''
  eventHubSettingsActive: 'false'
  connectionStringsAzureDb: ''
  connectionStringsEventHub: ''

steps:
- task: AzureCLI@2
  displayName: Login
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az login'

- task: AzureCLI@2
  displayName: Check or create resource group
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az group list --output tsv | grep $resourceGroup || az group create -n $(resourceGroup) -l $(region)'

- task: AzureCLI@2
  displayName: Check or create container registry
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az acr list --output tsv | grep $resourceGroup || az acr create --resource-group $(resourceGroup) --name $(azureContainerRegistry) --sku Basic'

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: ContainerRegistry

- task: Docker@2
  displayName: Build and push an image to ACR
  inputs:
    command: buildAndPush
    repository: pointofsaleapi
    tags: |
      $(Build.BuildId)
    azureSubscription: $(azureSubscription)
    azureContainerRegistry: $(azureContainerRegistry)
    Dockerfile: '**/DockerfilePipeline'

- task: AzureCLI@2
  displayName: Check or create appservice plan
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az appservice plan list --output tsv | grep $appServicePlanName || az appservice plan create  -g $(resourceGroup) --is-linux --name $(appServicePlanName) --sku B1'

#- task: AzureCLI@2
#  displayName: Check or create Azure webapp
#  inputs:
#    azureSubscription: $(azureSubscription)
#    scriptType: 'bash'
#    scriptLocation: 'inlineScript'
#    inlineScript: 'az webapp list --output tsv | grep $webAppName || az webapp create -g $(resourceGroup) -p $(appServicePlanName) -n $(webAppName) -i $(azureContainerRegistry)/$(imageName):$(Build.BuildId)'

- task: AzureCLI@2
  displayName: Set environment variables
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az webapp config appsettings set --name $(webAppName) --resource-group $(resourceGroup) --settings ExternalServiceSettings__Active=$(externalServiceActive) ExternalServiceSettings__ServiceUrl=$(externalServiceUrl) EventHubSettings__Active=$(eventHubSettingsActive) EventHubSettings__Name=$(eventHubSettingsName) ConnectionStrings__AzureDb=$(connectionStringsAzureDb) ConnectionStrings__EventHub=$(connectionStringsEventHub)